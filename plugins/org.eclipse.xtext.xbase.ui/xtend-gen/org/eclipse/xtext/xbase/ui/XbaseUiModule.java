/**
 * generated by Xtext
 */
package org.eclipse.xtext.xbase.ui;

import com.google.inject.Binder;
import com.google.inject.binder.AnnotatedBindingBuilder;
import com.google.inject.binder.LinkedBindingBuilder;
import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.ui.plugin.AbstractUIPlugin;
import org.eclipse.xtext.ui.editor.copyqualifiedname.CopyQualifiedNameService;
import org.eclipse.xtext.ui.editor.hover.html.IEObjectHoverDocumentationProvider;
import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.resource.ResourceServiceDescriptionLabelProvider;
import org.eclipse.xtext.validation.IssueSeveritiesProvider;
import org.eclipse.xtext.xbase.typesystem.internal.IFeatureScopeTracker;
import org.eclipse.xtext.xbase.typesystem.internal.OptimizingFeatureScopeTrackerProvider;
import org.eclipse.xtext.xbase.ui.AbstractXbaseUiModule;
import org.eclipse.xtext.xbase.ui.editor.copyqualifiedname.XbaseCopyQualifiedNameService;
import org.eclipse.xtext.xbase.ui.highlighting.XbaseHighlightingConfiguration;
import org.eclipse.xtext.xbase.ui.hover.XbaseHoverDocumentationProvider;
import org.eclipse.xtext.xbase.ui.labeling.XbaseDescriptionLabelProvider;
import org.eclipse.xtext.xbase.ui.labeling.XbaseLabelProvider;
import org.eclipse.xtext.xbase.ui.validation.XbaseIssueSeveritiesProvider;

/**
 * Use this class to register components to be used within the IDE.
 */
@SuppressWarnings("restriction")
public class XbaseUiModule extends AbstractXbaseUiModule {
  public XbaseUiModule(final AbstractUIPlugin plugin) {
    super(plugin);
  }
  
  @Override
  public Class<? extends IHighlightingConfiguration> bindIHighlightingConfiguration() {
    return XbaseHighlightingConfiguration.class;
  }
  
  @Override
  public Class<? extends IEObjectHoverDocumentationProvider> bindIEObjectHoverDocumentationProvider() {
    return XbaseHoverDocumentationProvider.class;
  }
  
  public Class<? extends IssueSeveritiesProvider> bindIssueSeverityServiceProvider() {
    return XbaseIssueSeveritiesProvider.class;
  }
  
  @Override
  public Class<? extends ILabelProvider> bindILabelProvider() {
    return XbaseLabelProvider.class;
  }
  
  @Override
  public void configureResourceUIServiceLabelProvider(final Binder binder) {
    AnnotatedBindingBuilder<ILabelProvider> _bind = binder.<ILabelProvider>bind(ILabelProvider.class);
    LinkedBindingBuilder<ILabelProvider> _annotatedWith = _bind.annotatedWith(ResourceServiceDescriptionLabelProvider.class);
    _annotatedWith.to(XbaseDescriptionLabelProvider.class);
  }
  
  @Override
  public Class<? extends CopyQualifiedNameService> bindCopyQualifiedNameService() {
    return XbaseCopyQualifiedNameService.class;
  }
  
  @Override
  public Class<? extends IFeatureScopeTracker.Provider> bindIFeatureScopeTracker$Provider() {
    return OptimizingFeatureScopeTrackerProvider.class;
  }
}
